---
export interface Props {
  class?: string;
}

const { class: className = '' } = Astro.props;
---

<section class={`py-16 sm:py-20 px-4 bg-gray-50 ${className}`}>
  <div class="container mx-auto max-w-6xl">
    <div class="text-center mb-12">
      <h2 class="font-display text-3xl sm:text-4xl lg:text-5xl text-navy-900 mb-4">
        Real Connecticut Businesses, Real Results
      </h2>
      <p class="text-xl text-gray-700 max-w-2xl mx-auto">
        Watch how automation transforms a typical day for businesses just like yours. Pick an industry and see the magic happen.
      </p>
    </div>

    <!-- Alpine.js Interactive Component -->
    <div x-data="automationSimulator()" x-init="init()" class="relative">
      <!-- Business Type Selector -->
      <div class="flex flex-wrap justify-center gap-4 mb-8">
        <template x-for="business in businesses" :key="business.id">
          <button
            @click="selectBusiness(business)"
            :class="selectedBusiness.id === business.id ? 'bg-coral-500 text-white shadow-lg scale-105' : 'bg-white text-navy-900 border-2 border-gray-200 hover:border-coral-500'"
            class="px-6 py-3 rounded-xl font-semibold transition-all"
          >
            <span class="text-2xl mr-2" x-text="business.icon"></span>
            <span x-text="business.name"></span>
          </button>
        </template>
      </div>

      <!-- Simulation Container -->
      <div class="relative bg-white rounded-2xl shadow-xl p-6 sm:p-8 lg:p-12 border border-gray-100">
        <!-- Progress Steps (Desktop) -->
        <div class="hidden sm:flex justify-between items-center mb-12 max-w-5xl mx-auto relative">
          <template x-for="(step, index) in steps" :key="step.id">
            <div
              :class="(index <= currentStep && isRunning) ? 'opacity-100 scale-100' : 'opacity-30 scale-90'"
              class="flex flex-col items-center transition-all duration-500 z-10"
            >
              <div 
                :class="{
                  'bg-coral-500 text-white shadow-lg animate-pulse': index === currentStep && isRunning,
                  'bg-green-500 text-white': index < currentStep && isRunning,
                  'bg-gray-200': !(index <= currentStep && isRunning)
                }"
                class="w-16 h-16 rounded-full flex items-center justify-center text-2xl mb-2 transition-all duration-500"
              >
                <span x-text="step.icon"></span>
              </div>
              <span class="text-xs sm:text-sm font-medium text-center max-w-[100px]" x-text="step.title"></span>
            </div>
          </template>
        </div>

        <!-- Progress Steps (Mobile) -->
        <div class="sm:hidden mb-8">
          <div class="flex justify-between items-center mb-2">
            <span class="text-sm font-medium text-gray-600">Step <span x-text="currentStep + 1"></span> of <span x-text="steps.length"></span></span>
            <span class="text-sm text-gray-500" x-text="steps[currentStep]?.title"></span>
          </div>
          <div class="w-full bg-gray-200 rounded-full h-2">
            <div 
              class="bg-coral-500 h-2 rounded-full transition-all duration-500"
              :style="`width: ${((currentStep + 1) / steps.length) * 100}%`"
            ></div>
          </div>
        </div>

        <!-- Connection Line (Desktop only) -->
        <div class="hidden sm:block absolute top-[88px] left-20 right-20 h-0.5 bg-gray-200">
          <div 
            class="h-full bg-coral-500 transition-all duration-1000 ease-out"
            :style="`width: ${isRunning ? (currentStep / (steps.length - 1)) * 100 : 0}%`"
          ></div>
        </div>

        <!-- Content Area -->
        <div class="min-h-[300px] sm:min-h-[350px] flex items-center justify-center">
          <!-- Start Button -->
          <div x-show="!isRunning && currentStep === 0" class="text-center">
            <button
              @click="runSimulation"
              class="group px-8 sm:px-12 py-4 sm:py-6 bg-coral-500 text-white font-bold rounded-xl shadow-xl hover:shadow-2xl transform hover:scale-105 transition-all duration-300"
            >
              <span class="flex items-center text-base sm:text-lg">
                <span class="text-2xl sm:text-3xl mr-3 sm:mr-4">🚀</span>
                Watch Automation in Action
                <svg class="w-5 sm:w-6 h-5 sm:h-6 ml-3 sm:ml-4 group-hover:translate-x-1 transition-transform" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M13 7l5 5m0 0l-5 5m5-5H6" />
                </svg>
              </span>
            </button>
            <p class="mt-4 text-sm text-gray-600">
              See how <span x-text="selectedBusiness.name"></span> saves <span x-text="selectedBusiness.timeSaved"></span> hours every week
            </p>
          </div>

          <!-- Running Simulation -->
          <div x-show="isRunning && !showFinalStats" class="w-full max-w-2xl mx-auto text-center">
            <h3 class="font-bold text-xl sm:text-2xl text-navy-900 mb-4" x-text="steps[currentStep]?.title"></h3>
            
            <!-- Time Savings Badge -->
            <div x-show="steps[currentStep]?.manualTime > 0" class="bg-green-50 rounded-xl p-3 sm:p-4 mb-6 max-w-md mx-auto">
              <div class="flex items-center justify-center text-green-700">
                <svg class="w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7" />
                </svg>
                <span class="text-sm sm:text-base font-semibold">
                  Manual: <span x-text="steps[currentStep]?.manualTime"></span> min → Automated: 0 min
                </span>
              </div>
            </div>

            <!-- Dynamic Content Based on Step -->
            <div x-html="getStepContent()"></div>
          </div>

          <!-- Final Stats -->
          <div x-show="showFinalStats" class="w-full animate-fade-in">
            <div class="text-center">
              <div class="text-4xl sm:text-5xl mb-6">🎉</div>
              <h3 class="font-bold text-2xl sm:text-3xl text-navy-900 mb-8">
                Here's What <span x-text="selectedBusiness.name"></span> Gets Back
              </h3>
              
              <!-- Main Value Card -->
              <div class="bg-gradient-to-r from-green-500 to-emerald-500 text-white rounded-xl p-6 sm:p-8 mb-8 max-w-2xl mx-auto shadow-xl">
                <div class="text-3xl sm:text-5xl font-bold mb-2">
                  $<span x-text="selectedBusiness.dollarsRecovered.toLocaleString()"></span>/month
                </div>
                <div class="text-lg sm:text-xl">In New Revenue & Saved Time</div>
                <div class="text-sm mt-2 opacity-90">
                  (<span x-text="selectedBusiness.timeSaved"></span> hours/week saved + no more missed opportunities)
                </div>
              </div>
              
              <!-- Detailed Savings -->
              <div class="bg-gray-50 rounded-xl p-6 max-w-3xl mx-auto">
                <div class="grid sm:grid-cols-3 gap-4 sm:gap-6 mb-6">
                  <div class="text-center">
                    <div class="text-xl sm:text-2xl font-semibold text-coral-500">
                      <span x-text="selectedBusiness.cashFlow"></span>
                    </div>
                    <div class="text-sm text-gray-600">Cash Flow Impact</div>
                  </div>
                  <div class="text-center">
                    <div class="text-xl sm:text-2xl font-semibold text-navy-900">
                      <span x-text="selectedBusiness.growth"></span>
                    </div>
                    <div class="text-sm text-gray-600">Business Growth</div>
                  </div>
                  <div class="text-center">
                    <div class="text-2xl sm:text-3xl font-bold text-green-600">
                      24/7
                    </div>
                    <div class="text-sm text-gray-600">Always Working</div>
                  </div>
                </div>
                
                <!-- What They Can Do Now -->
                <div class="text-left space-y-2 text-sm sm:text-base">
                  <p class="font-semibold mb-3">With that time back, they can:</p>
                  <ul class="space-y-1 text-gray-700">
                    <li x-text="'• ' + selectedBusiness.benefit1"></li>
                    <li x-text="'• ' + selectedBusiness.benefit2"></li>
                    <li x-text="'• ' + selectedBusiness.benefit3"></li>
                  </ul>
                </div>
              </div>
              
              <!-- Action Buttons -->
              <div class="mt-8 flex flex-col sm:flex-row gap-4 justify-center">
                <button
                  @click="resetSimulation"
                  class="inline-flex items-center justify-center px-6 py-3 bg-navy-900 text-white font-semibold rounded-lg hover:bg-navy-800 transition-all"
                >
                  <svg class="w-5 h-5 mr-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15" />
                  </svg>
                  Try Another Business
                </button>
                <a href="#contact" class="inline-flex items-center justify-center px-6 py-3 bg-coral-500 text-white font-semibold rounded-lg hover:bg-coral-400 transition-all">
                  Get This for Your Business
                  <svg class="w-5 h-5 ml-2" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 8l4 4m0 0l-4 4m4-4H3" />
                  </svg>
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Bottom Note -->
      <div class="text-center mt-8">
        <p class="text-gray-600 text-sm max-w-2xl mx-auto">
          <span x-text="selectedBusiness.name"></span> was losing <span class="font-semibold" x-text="selectedBusiness.missedCalls"></span>. 
          Now everything happens automatically, 24/7.
        </p>
      </div>
    </div>
  </div>
</section>

<script is:inline>
window.automationSimulator = function() {
  return {
    businesses: [
      {
        id: 'plumber',
        name: 'Plumbing Company',
        icon: '🔧',
        timeSaved: 10,
        dollarsRecovered: 3200,
        tasksAutomated: 6,
        missedCalls: 'Lost $2,400/month from missed emergency calls',
        cashFlow: 'Got paid 21 days faster on average',
        growth: 'Added 2 more trucks without adding office staff',
        benefit1: 'Never miss another $500 emergency call at 9pm',
        benefit2: 'Get paid in 2 weeks instead of 5 weeks',
        benefit3: 'Handle 40% more calls with same office staff'
      },
      {
        id: 'restaurant',
        name: 'Local Restaurant',
        icon: '🍕',
        timeSaved: 12,
        dollarsRecovered: 2800,
        tasksAutomated: 7,
        missedCalls: 'Lost $1,800/month from missed catering orders',
        cashFlow: 'Increased repeat customers by 35%',
        growth: 'Reviews went from 3.5 to 4.6 stars',
        benefit1: 'Capture every $300+ catering opportunity',
        benefit2: 'Turn one-time diners into weekly regulars',
        benefit3: 'Get 5x more positive reviews automatically'
      },
      {
        id: 'cleaning',
        name: 'Cleaning Service',
        icon: '🏠',
        timeSaved: 15,
        dollarsRecovered: 2600,
        tasksAutomated: 8,
        missedCalls: 'Lost $1,600/month from phone tag with prospects',
        cashFlow: 'Reduced no-shows by 80%',
        growth: 'Grew from 12 to 35 regular clients',
        benefit1: 'Book new clients even while you\'re cleaning',
        benefit2: 'Stop losing $125 every time someone no-shows',
        benefit3: 'Schedule 3x more efficiently with smart routing'
      }
    ],
    
    steps: [
      { id: 'trigger', title: 'Customer Reaches Out', icon: '📥', manualTime: 0 },
      { id: 'capture', title: 'Info Saved Instantly', icon: '💾', manualTime: 5 },
      { id: 'notify', title: 'You Get Notified', icon: '📱', manualTime: 2 },
      { id: 'respond', title: 'Customer Gets Answer', icon: '💬', manualTime: 10 },
      { id: 'schedule', title: 'Booking Confirmed', icon: '📅', manualTime: 8 },
      { id: 'followup', title: 'Reminders Set', icon: '🔔', manualTime: 5 },
      { id: 'complete', title: 'Done!', icon: '✅', manualTime: 0 }
    ],
    
    selectedBusiness: null,
    isRunning: false,
    currentStep: 0,
    showFinalStats: false,
    
    init() {
      this.selectedBusiness = this.businesses[0];
    },
    
    selectBusiness(business) {
      this.selectedBusiness = business;
      this.resetSimulation();
    },
    
    async runSimulation() {
      this.isRunning = true;
      this.currentStep = 0;
      this.showFinalStats = false;
      
      for (let i = 0; i < this.steps.length; i++) {
        this.currentStep = i;
        await new Promise(resolve => setTimeout(resolve, 3500));
      }
      
      setTimeout(() => {
        this.showFinalStats = true;
      }, 1500);
    },
    
    resetSimulation() {
      this.isRunning = false;
      this.currentStep = 0;
      this.showFinalStats = false;
    },
    
    getStepContent() {
      const step = this.steps[this.currentStep];
      const business = this.selectedBusiness;
      
      switch(step.id) {
        case 'trigger':
          if (business.id === 'plumber') {
            return `
              <div class="bg-white rounded-lg border-2 border-gray-200 p-4 max-w-md mx-auto shadow-lg">
                <div class="flex items-center mb-2">
                  <span class="text-2xl mr-2">🚰</span>
                  <span class="font-semibold">Emergency Call Form Submitted</span>
                </div>
                <div class="text-sm text-gray-600">
                  <p>"Pipe burst in basement! Need help ASAP!"</p>
                  <p class="mt-1">- Sarah M., West Haven</p>
                </div>
              </div>
            `;
          } else if (business.id === 'restaurant') {
            return `
              <div class="bg-white rounded-lg border-2 border-gray-200 p-4 max-w-md mx-auto shadow-lg">
                <div class="flex items-center mb-2">
                  <span class="text-2xl mr-2">🎉</span>
                  <span class="font-semibold">Catering Request Received</span>
                </div>
                <div class="text-sm text-gray-600">
                  <p>"Need catering for 50 people this Saturday"</p>
                  <p class="mt-1">- Office party in Milford</p>
                </div>
              </div>
            `;
          } else {
            return `
              <div class="bg-white rounded-lg border-2 border-gray-200 p-4 max-w-md mx-auto shadow-lg">
                <div class="flex items-center mb-2">
                  <span class="text-2xl mr-2">📞</span>
                  <span class="font-semibold">New Cleaning Request</span>
                </div>
                <div class="text-sm text-gray-600">
                  <p>"Need weekly cleaning service starting ASAP"</p>
                  <p class="mt-1">- 3 bedroom home in Hamden</p>
                </div>
              </div>
            `;
          }
          
        case 'capture':
          return `
            <div class="bg-blue-50 rounded-lg p-4 max-w-md mx-auto">
              <div class="flex items-center justify-center">
                <svg class="w-12 h-12 text-blue-500 animate-pulse" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z" />
                </svg>
              </div>
              <p class="text-center mt-2 text-sm font-medium">All their info is saved automatically</p>
              <p class="text-center text-xs text-gray-600 mt-1">Name, phone, address, service needs - done!</p>
            </div>
          `;
          
        case 'notify':
          if (business.id === 'plumber') {
            return `
              <div class="space-y-3 max-w-md mx-auto">
                <div class="bg-green-100 rounded-lg p-3 animate-slide-down">
                  <div class="flex items-center">
                    <span class="text-xl mr-2">📱</span>
                    <div class="text-sm">
                      <p class="font-semibold">Text to On-Call Tech</p>
                      <p class="text-gray-600">Emergency in West Haven - pipe burst</p>
                    </div>
                  </div>
                </div>
                <div class="bg-blue-100 rounded-lg p-3 animate-slide-down animation-delay-200">
                  <div class="flex items-center">
                    <span class="text-xl mr-2">📧</span>
                    <div class="text-sm">
                      <p class="font-semibold">Email to Office</p>
                      <p class="text-gray-600">New emergency call logged</p>
                    </div>
                  </div>
                </div>
              </div>
            `;
          } else {
            return `
              <div class="bg-purple-100 rounded-lg p-4 max-w-md mx-auto">
                <div class="text-center">
                  <span class="text-3xl">🔔</span>
                  <p class="mt-2 font-semibold">Team Notified Instantly</p>
                  <p class="text-sm text-gray-600 mt-1">Right person • Right time • Right info</p>
                </div>
              </div>
            `;
          }
          
        case 'respond':
          if (business.id === 'plumber') {
            return `
              <div class="bg-white rounded-lg border-2 border-blue-500 p-4 max-w-md mx-auto shadow-lg">
                <div class="text-sm text-gray-600 mb-2">Auto-reply sent:</div>
                <div class="bg-blue-50 p-3 rounded">
                  <p class="text-sm">"Hi Sarah! Got your emergency request. Mike is on his way, ETA 25 minutes. He'll call you in 5 minutes. Text URGENT if you need immediate guidance."</p>
                </div>
                <div class="text-xs text-gray-500 mt-2">Customer knows help is coming!</div>
              </div>
            `;
          } else if (business.id === 'restaurant') {
            return `
              <div class="bg-white rounded-lg border-2 border-blue-500 p-4 max-w-md mx-auto shadow-lg">
                <div class="text-sm text-gray-600 mb-2">Instant response:</div>
                <div class="bg-blue-50 p-3 rounded">
                  <p class="text-sm">"Thanks for choosing us for your event! I'll have our catering menu and pricing to you within 30 minutes. Any dietary restrictions?"</p>
                </div>
                <div class="text-xs text-gray-500 mt-2">$1,800 catering job secured!</div>
              </div>
            `;
          } else {
            return `
              <div class="bg-white rounded-lg border-2 border-blue-500 p-4 max-w-md mx-auto shadow-lg">
                <div class="text-sm text-gray-600 mb-2">Automatic text sent:</div>
                <div class="bg-blue-50 p-3 rounded">
                  <p class="text-sm">"Hi! Thanks for choosing us. I can do a walkthrough tomorrow at 2pm or Thursday at 10am. Which works better? Reply 1 or 2."</p>
                </div>
                <div class="text-xs text-gray-500 mt-2">Booking while you're still cleaning!</div>
              </div>
            `;
          }
          
        case 'schedule':
          return `
            <div class="bg-white rounded-lg border-2 border-green-500 p-4 max-w-md mx-auto shadow-lg">
              <div class="flex items-center justify-between mb-3">
                <span class="text-2xl">📅</span>
                <span class="text-sm text-green-600 font-semibold">Added to Calendar</span>
              </div>
              <div class="space-y-2 text-sm">
                <div class="flex justify-between">
                  <span class="text-gray-600">When:</span>
                  <span class="font-medium">Best available slot</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Invoice:</span>
                  <span class="font-medium">Sent ✓</span>
                </div>
                <div class="flex justify-between">
                  <span class="text-gray-600">Route:</span>
                  <span class="font-medium">Optimized ✓</span>
                </div>
              </div>
            </div>
          `;
          
        case 'followup':
          return `
            <div class="bg-gradient-to-r from-blue-50 to-purple-50 rounded-lg p-4 max-w-md mx-auto">
              <div class="text-center">
                <span class="text-3xl mb-2">🔔</span>
                <p class="font-semibold">Everything Set to Happen Automatically</p>
                <div class="grid grid-cols-3 gap-2 mt-3 text-xs">
                  <div class="text-center">
                    <div class="text-xl">📧</div>
                    <p>Confirmation</p>
                    <p class="text-gray-500">Now</p>
                  </div>
                  <div class="text-center">
                    <div class="text-xl">📱</div>
                    <p>Reminder</p>
                    <p class="text-gray-500">Day before</p>
                  </div>
                  <div class="text-center">
                    <div class="text-xl">⭐</div>
                    <p>Review ask</p>
                    <p class="text-gray-500">Day after</p>
                  </div>
                </div>
              </div>
            </div>
          `;
          
        default:
          return '';
      }
    }
  }
}
</script>

<style>
  @keyframes slide-down {
    from {
      opacity: 0;
      transform: translateY(-20px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }
  
  @keyframes fade-in {
    from {
      opacity: 0;
    }
    to {
      opacity: 1;
    }
  }
  
  .animate-slide-down {
    animation: slide-down 0.5s ease-out forwards;
  }
  
  .animate-fade-in {
    animation: fade-in 0.8s ease-out forwards;
  }
  
  .animation-delay-200 {
    animation-delay: 200ms;
  }
</style>